{"ast":null,"code":"// src/supabase/cartService.js\nimport { supabase } from \"./client\";\nexport async function getOrCreateCart(userId) {\n  const {\n    data\n  } = await supabase.from(\"carts\").select(\"*\").eq(\"user_id\", userId).single();\n  if (data) return data;\n  const {\n    data: newCart,\n    error: createError\n  } = await supabase.from(\"carts\").insert({\n    user_id: userId\n  }).select().single();\n  if (createError) throw createError;\n  return newCart;\n}\nexport async function addToCart(userId, productId, quantity = 1) {\n  const cart = await getOrCreateCart(userId);\n\n  // Verificar si ya existe el producto en el carrito\n  const {\n    data: existingItem\n  } = await supabase.from(\"cart_items\").select(\"*\").eq(\"cart_id\", cart.id).eq(\"product_id\", productId).single();\n  if (existingItem) {\n    // Actualizar cantidad (sin exceder stock)\n    const {\n      data: product\n    } = await supabase.from(\"products\").select(\"stock\").eq(\"id\", productId).single();\n    const newQuantity = Math.min(existingItem.quantity + quantity, product.stock);\n    await supabase.from(\"cart_items\").update({\n      quantity: newQuantity\n    }).eq(\"id\", existingItem.id);\n  } else {\n    await supabase.from(\"cart_items\").insert({\n      cart_id: cart.id,\n      product_id: productId,\n      quantity\n    });\n  }\n}\nexport async function getCartItems(userId) {\n  const cart = await getOrCreateCart(userId);\n  const {\n    data,\n    error\n  } = await supabase.from(\"cart_items\").select(`\n      id,\n      quantity,\n      products (id, name, price, image_url, stock)\n    `).eq(\"cart_id\", cart.id);\n  if (error) throw error;\n  return data;\n}\nexport async function removeFromCart(itemId) {\n  await supabase.from(\"cart_items\").delete().eq(\"id\", itemId);\n}\nexport async function clearCart(cartId) {\n  await supabase.from(\"cart_items\").delete().eq(\"cart_id\", cartId);\n}","map":{"version":3,"names":["supabase","getOrCreateCart","userId","data","from","select","eq","single","newCart","error","createError","insert","user_id","addToCart","productId","quantity","cart","existingItem","id","product","newQuantity","Math","min","stock","update","cart_id","product_id","getCartItems","removeFromCart","itemId","delete","clearCart","cartId"],"sources":["C:/tienda_reptil/src/supabase/cartService.js"],"sourcesContent":["// src/supabase/cartService.js\r\nimport { supabase } from \"./client\";\r\n\r\nexport async function getOrCreateCart(userId) {\r\n  const { data} = await supabase\r\n    .from(\"carts\")\r\n    .select(\"*\")\r\n    .eq(\"user_id\", userId)\r\n    .single();\r\n\r\n  if (data) return data;\r\n\r\n  const { data: newCart, error: createError } = await supabase\r\n    .from(\"carts\")\r\n    .insert({ user_id: userId })\r\n    .select()\r\n    .single();\r\n\r\n  if (createError) throw createError;\r\n  return newCart;\r\n}\r\n\r\nexport async function addToCart(userId, productId, quantity = 1) {\r\n  const cart = await getOrCreateCart(userId);\r\n\r\n  // Verificar si ya existe el producto en el carrito\r\n  const { data: existingItem } = await supabase\r\n    .from(\"cart_items\")\r\n    .select(\"*\")\r\n    .eq(\"cart_id\", cart.id)\r\n    .eq(\"product_id\", productId)\r\n    .single();\r\n\r\n  if (existingItem) {\r\n    // Actualizar cantidad (sin exceder stock)\r\n    const { data: product } = await supabase\r\n      .from(\"products\")\r\n      .select(\"stock\")\r\n      .eq(\"id\", productId)\r\n      .single();\r\n\r\n    const newQuantity = Math.min(existingItem.quantity + quantity, product.stock);\r\n\r\n    await supabase\r\n      .from(\"cart_items\")\r\n      .update({ quantity: newQuantity })\r\n      .eq(\"id\", existingItem.id);\r\n  } else {\r\n    await supabase\r\n      .from(\"cart_items\")\r\n      .insert({ cart_id: cart.id, product_id: productId, quantity });\r\n  }\r\n}\r\n\r\nexport async function getCartItems(userId) {\r\n  const cart = await getOrCreateCart(userId);\r\n\r\n  const { data, error } = await supabase\r\n    .from(\"cart_items\")\r\n    .select(`\r\n      id,\r\n      quantity,\r\n      products (id, name, price, image_url, stock)\r\n    `)\r\n    .eq(\"cart_id\", cart.id);\r\n\r\n  if (error) throw error;\r\n  return data;\r\n}\r\n\r\nexport async function removeFromCart(itemId) {\r\n  await supabase.from(\"cart_items\").delete().eq(\"id\", itemId);\r\n}\r\n\r\nexport async function clearCart(cartId) {\r\n  await supabase.from(\"cart_items\").delete().eq(\"cart_id\", cartId);\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}