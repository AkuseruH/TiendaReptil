{"ast":null,"code":"// src/supabase/cartService.js\nimport { supabase } from \"./client\";\n\n/**\r\n * üõí Obtiene o crea el carrito del usuario actual\r\n */\nexport async function getOrCreateCart(userId) {\n  if (!userId) {\n    console.error(\"‚ùå getOrCreateCart: userId es null o indefinido\");\n    return null;\n  }\n\n  // Buscar carrito existente\n  const {\n    data: existingCart,\n    error: fetchError\n  } = await supabase.from(\"carts\").select(\"*\").eq(\"user_id\", userId).maybeSingle();\n  if (fetchError) {\n    console.error(\"Error al obtener carrito:\", fetchError.message);\n  }\n  if (existingCart) return existingCart;\n\n  // Si no existe, crear uno nuevo\n  const {\n    data: newCart,\n    error: createError\n  } = await supabase.from(\"carts\").insert({\n    user_id: userId\n  }).select().single();\n  if (createError) {\n    console.error(\"Error al crear carrito:\", createError.message);\n    return null;\n  }\n  return newCart;\n}\n\n/**\r\n * ‚ûï Agrega un producto al carrito\r\n */\nexport async function addToCart(userId, productId, quantity = 1) {\n  const cart = await getOrCreateCart(userId);\n  if (!cart) {\n    alert(\"‚ö†Ô∏è No se pudo obtener o crear el carrito. Intenta iniciar sesi√≥n nuevamente.\");\n    return;\n  }\n\n  // Verificar si ya existe el producto en el carrito\n  const {\n    data: existingItem\n  } = await supabase.from(\"cart_items\").select(\"*\").eq(\"cart_id\", cart.id).eq(\"product_id\", productId).maybeSingle();\n\n  // Verificar stock del producto\n  const {\n    data: product,\n    error: productError\n  } = await supabase.from(\"products\").select(\"stock\").eq(\"id\", productId).single();\n  if (productError || !product) {\n    console.error(\"Error al obtener producto:\", productError === null || productError === void 0 ? void 0 : productError.message);\n    return;\n  }\n  if (product.stock <= 0) {\n    alert(\"‚ùå No hay stock disponible de este producto.\");\n    return;\n  }\n\n  // Actualizar o insertar seg√∫n exista\n  if (existingItem) {\n    const newQuantity = Math.min(existingItem.quantity + quantity, product.stock);\n    await supabase.from(\"cart_items\").update({\n      quantity: newQuantity\n    }).eq(\"id\", existingItem.id);\n  } else {\n    await supabase.from(\"cart_items\").insert({\n      cart_id: cart.id,\n      product_id: productId,\n      quantity\n    });\n  }\n  alert(\"‚úÖ Producto agregado al carrito.\");\n}\n\n/**\r\n * üì¶ Obtiene todos los productos del carrito del usuario\r\n */\nexport async function getCartItems(userId) {\n  if (!userId) return [];\n  const cart = await getOrCreateCart(userId);\n  if (!cart) return [];\n  const {\n    data,\n    error\n  } = await supabase.from(\"cart_items\").select(`\n      id,\n      quantity,\n      products (\n        id,\n        name,\n        price,\n        image_url,\n        stock\n      )\n    `).eq(\"cart_id\", cart.id);\n  if (error) {\n    console.error(\"Error al obtener items del carrito:\", error.message);\n    return [];\n  }\n  return data || [];\n}\n\n/**\r\n * ‚ùå Elimina un producto del carrito\r\n */\nexport async function removeFromCart(itemId) {\n  const {\n    error\n  } = await supabase.from(\"cart_items\").delete().eq(\"id\", itemId);\n  if (error) console.error(\"Error al eliminar producto del carrito:\", error.message);\n}\n\n/**\r\n * üßπ Limpia completamente el carrito\r\n */\nexport async function clearCart(cartId) {\n  const {\n    error\n  } = await supabase.from(\"cart_items\").delete().eq(\"cart_id\", cartId);\n  if (error) console.error(\"Error al limpiar carrito:\", error.message);\n}","map":{"version":3,"names":["supabase","getOrCreateCart","userId","console","error","data","existingCart","fetchError","from","select","eq","maybeSingle","message","newCart","createError","insert","user_id","single","addToCart","productId","quantity","cart","alert","existingItem","id","product","productError","stock","newQuantity","Math","min","update","cart_id","product_id","getCartItems","removeFromCart","itemId","delete","clearCart","cartId"],"sources":["C:/tienda_reptil/src/supabase/cartService.js"],"sourcesContent":["// src/supabase/cartService.js\r\nimport { supabase } from \"./client\";\r\n\r\n/**\r\n * üõí Obtiene o crea el carrito del usuario actual\r\n */\r\nexport async function getOrCreateCart(userId) {\r\n  if (!userId) {\r\n    console.error(\"‚ùå getOrCreateCart: userId es null o indefinido\");\r\n    return null;\r\n  }\r\n\r\n  // Buscar carrito existente\r\n  const { data: existingCart, error: fetchError } = await supabase\r\n    .from(\"carts\")\r\n    .select(\"*\")\r\n    .eq(\"user_id\", userId)\r\n    .maybeSingle();\r\n\r\n  if (fetchError) {\r\n    console.error(\"Error al obtener carrito:\", fetchError.message);\r\n  }\r\n\r\n  if (existingCart) return existingCart;\r\n\r\n  // Si no existe, crear uno nuevo\r\n  const { data: newCart, error: createError } = await supabase\r\n    .from(\"carts\")\r\n    .insert({ user_id: userId })\r\n    .select()\r\n    .single();\r\n\r\n  if (createError) {\r\n    console.error(\"Error al crear carrito:\", createError.message);\r\n    return null;\r\n  }\r\n\r\n  return newCart;\r\n}\r\n\r\n/**\r\n * ‚ûï Agrega un producto al carrito\r\n */\r\nexport async function addToCart(userId, productId, quantity = 1) {\r\n  const cart = await getOrCreateCart(userId);\r\n\r\n  if (!cart) {\r\n    alert(\"‚ö†Ô∏è No se pudo obtener o crear el carrito. Intenta iniciar sesi√≥n nuevamente.\");\r\n    return;\r\n  }\r\n\r\n  // Verificar si ya existe el producto en el carrito\r\n  const { data: existingItem } = await supabase\r\n    .from(\"cart_items\")\r\n    .select(\"*\")\r\n    .eq(\"cart_id\", cart.id)\r\n    .eq(\"product_id\", productId)\r\n    .maybeSingle();\r\n\r\n  // Verificar stock del producto\r\n  const { data: product, error: productError } = await supabase\r\n    .from(\"products\")\r\n    .select(\"stock\")\r\n    .eq(\"id\", productId)\r\n    .single();\r\n\r\n  if (productError || !product) {\r\n    console.error(\"Error al obtener producto:\", productError?.message);\r\n    return;\r\n  }\r\n\r\n  if (product.stock <= 0) {\r\n    alert(\"‚ùå No hay stock disponible de este producto.\");\r\n    return;\r\n  }\r\n\r\n  // Actualizar o insertar seg√∫n exista\r\n  if (existingItem) {\r\n    const newQuantity = Math.min(\r\n      existingItem.quantity + quantity,\r\n      product.stock\r\n    );\r\n\r\n    await supabase\r\n      .from(\"cart_items\")\r\n      .update({ quantity: newQuantity })\r\n      .eq(\"id\", existingItem.id);\r\n  } else {\r\n    await supabase\r\n      .from(\"cart_items\")\r\n      .insert({ cart_id: cart.id, product_id: productId, quantity });\r\n  }\r\n\r\n  alert(\"‚úÖ Producto agregado al carrito.\");\r\n}\r\n\r\n/**\r\n * üì¶ Obtiene todos los productos del carrito del usuario\r\n */\r\nexport async function getCartItems(userId) {\r\n  if (!userId) return [];\r\n\r\n  const cart = await getOrCreateCart(userId);\r\n  if (!cart) return [];\r\n\r\n  const { data, error } = await supabase\r\n    .from(\"cart_items\")\r\n    .select(`\r\n      id,\r\n      quantity,\r\n      products (\r\n        id,\r\n        name,\r\n        price,\r\n        image_url,\r\n        stock\r\n      )\r\n    `)\r\n    .eq(\"cart_id\", cart.id);\r\n\r\n  if (error) {\r\n    console.error(\"Error al obtener items del carrito:\", error.message);\r\n    return [];\r\n  }\r\n\r\n  return data || [];\r\n}\r\n\r\n/**\r\n * ‚ùå Elimina un producto del carrito\r\n */\r\nexport async function removeFromCart(itemId) {\r\n  const { error } = await supabase.from(\"cart_items\").delete().eq(\"id\", itemId);\r\n  if (error) console.error(\"Error al eliminar producto del carrito:\", error.message);\r\n}\r\n\r\n/**\r\n * üßπ Limpia completamente el carrito\r\n */\r\nexport async function clearCart(cartId) {\r\n  const { error } = await supabase.from(\"cart_items\").delete().eq(\"cart_id\", cartId);\r\n  if (error) console.error(\"Error al limpiar carrito:\", error.message);\r\n}\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}