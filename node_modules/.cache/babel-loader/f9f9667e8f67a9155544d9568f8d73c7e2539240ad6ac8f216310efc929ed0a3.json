{"ast":null,"code":"// src/supabase/cartService.js\nimport { supabase } from \"./client\";\n\n/**\r\n * üîπ Obtiene o crea el carrito del usuario actual.\r\n */\nexport async function getOrCreateCart(userId) {\n  if (!userId) throw new Error(\"Usuario no autenticado.\");\n\n  // Buscar carrito existente (usamos maybeSingle para no lanzar error si no existe)\n  const {\n    data: existingCart,\n    error: fetchError\n  } = await supabase.from(\"carts\").select(\"*\").eq(\"user_id\", userId).maybeSingle();\n  if (fetchError) {\n    console.error(\"Error al obtener carrito:\", fetchError.message);\n    throw fetchError;\n  }\n  if (existingCart) {\n    return existingCart;\n  }\n\n  // Si no existe, creamos uno nuevo\n  const {\n    data: newCart,\n    error: createError\n  } = await supabase.from(\"carts\").insert({\n    user_id: userId\n  }).select().maybeSingle();\n  if (createError) {\n    console.error(\"Error al crear carrito:\", createError.message);\n    throw createError;\n  }\n  return newCart;\n}\n\n/**\r\n * üîπ Agrega un producto al carrito del usuario actual.\r\n */\nexport async function addToCart(productId, quantity = 1) {\n  const {\n    data,\n    error: userError\n  } = await supabase.auth.getUser();\n  if (userError) {\n    console.error(\"Error al obtener usuario:\", userError.message);\n    alert(\"‚ö†Ô∏è Debes iniciar sesi√≥n para agregar productos al carrito.\");\n    return;\n  }\n  const user = data.user;\n  if (!user) {\n    alert(\"‚ö†Ô∏è Debes iniciar sesi√≥n para agregar productos al carrito.\");\n    return;\n  }\n  try {\n    const cart = await getOrCreateCart(user.id);\n\n    // Verificar si el producto ya est√° en el carrito (sin error si no existe)\n    const {\n      data: existingItem,\n      error: existingItemError\n    } = await supabase.from(\"cart_items\").select(\"*\").eq(\"cart_id\", cart.id).eq(\"product_id\", productId).maybeSingle();\n    if (existingItemError) {\n      console.error(\"Error al consultar √≠tem existente:\", existingItemError.message);\n      throw existingItemError;\n    }\n\n    // Consultar stock del producto\n    const {\n      data: productData,\n      error: productError\n    } = await supabase.from(\"products\").select(\"stock\").eq(\"id\", productId).maybeSingle();\n    if (productError) {\n      console.error(\"Error al obtener producto:\", productError.message);\n      throw productError;\n    }\n    if (!productData) {\n      alert(\"‚ö†Ô∏è Producto no encontrado.\");\n      return;\n    }\n    if (productData.stock <= 0) {\n      alert(\"‚ùå No hay stock disponible de este producto.\");\n      return;\n    }\n    if (existingItem) {\n      // Actualizar cantidad (sin exceder el stock)\n      const newQuantity = Math.min(existingItem.quantity + quantity, productData.stock);\n      const {\n        error: updateError\n      } = await supabase.from(\"cart_items\").update({\n        quantity: newQuantity\n      }).eq(\"id\", existingItem.id);\n      if (updateError) {\n        console.error(\"Error al actualizar cantidad del carrito:\", updateError.message);\n        throw updateError;\n      }\n    } else {\n      // Insertar nuevo √≠tem en el carrito\n      const {\n        error: insertError\n      } = await supabase.from(\"cart_items\").insert({\n        cart_id: cart.id,\n        product_id: productId,\n        quantity\n      });\n      if (insertError) {\n        console.error(\"Error al insertar item en el carrito:\", insertError.message);\n        throw insertError;\n      }\n    }\n    alert(\"‚úÖ Producto agregado al carrito.\");\n  } catch (err) {\n    console.error(\"Error al agregar al carrito:\", err.message);\n    alert(\"Ocurri√≥ un error al agregar el producto al carrito.\");\n  }\n}\n\n/**\r\n * üîπ Obtiene todos los productos del carrito del usuario actual.\r\n */\nexport async function getCartItems() {\n  const {\n    data,\n    error: userError\n  } = await supabase.auth.getUser();\n  if (userError) {\n    console.error(\"Error al obtener usuario:\", userError.message);\n    return [];\n  }\n  const user = data.user;\n  if (!user) {\n    return [];\n  }\n  try {\n    const cart = await getOrCreateCart(user.id);\n    const {\n      data: items,\n      error\n    } = await supabase.from(\"cart_items\").select(`\n        id,\n        quantity,\n        products (\n          id,\n          name,\n          price,\n          stock,\n          image_url\n        )\n      `).eq(\"cart_id\", cart.id);\n    if (error) {\n      console.error(\"Error al obtener items del carrito:\", error.message);\n      throw error;\n    }\n    return items || [];\n  } catch (err) {\n    console.error(\"Error al obtener items del carrito:\", err.message);\n    return [];\n  }\n}\n\n/**\r\n * üîπ Elimina un producto espec√≠fico del carrito.\r\n */\nexport async function removeFromCart(itemId) {\n  const {\n    error\n  } = await supabase.from(\"cart_items\").delete().eq(\"id\", itemId);\n  if (error) {\n    console.error(\"Error al eliminar del carrito:\", error.message);\n  }\n}\n\n/**\r\n * üîπ Vac√≠a completamente el carrito del usuario actual.\r\n */\nexport async function clearCart() {\n  const {\n    data,\n    error: userError\n  } = await supabase.auth.getUser();\n  if (userError) {\n    console.error(\"Error al obtener usuario:\", userError.message);\n    return;\n  }\n  const user = data.user;\n  if (!user) {\n    return;\n  }\n  const cart = await getOrCreateCart(user.id);\n  const {\n    error\n  } = await supabase.from(\"cart_items\").delete().eq(\"cart_id\", cart.id);\n  if (error) {\n    console.error(\"Error al limpiar carrito:\", error.message);\n  }\n}","map":{"version":3,"names":["supabase","getOrCreateCart","userId","Error","data","existingCart","error","fetchError","from","select","eq","maybeSingle","console","message","newCart","createError","insert","user_id","addToCart","productId","quantity","userError","auth","getUser","alert","user","cart","id","existingItem","existingItemError","productData","productError","stock","newQuantity","Math","min","updateError","update","insertError","cart_id","product_id","err","getCartItems","items","removeFromCart","itemId","delete","clearCart"],"sources":["C:/tienda_reptil/src/supabase/cartService.js"],"sourcesContent":["// src/supabase/cartService.js\r\nimport { supabase } from \"./client\";\r\n\r\n/**\r\n * üîπ Obtiene o crea el carrito del usuario actual.\r\n */\r\nexport async function getOrCreateCart(userId) {\r\n  if (!userId) throw new Error(\"Usuario no autenticado.\");\r\n\r\n  // Buscar carrito existente (usamos maybeSingle para no lanzar error si no existe)\r\n  const { data: existingCart, error: fetchError } = await supabase\r\n    .from(\"carts\")\r\n    .select(\"*\")\r\n    .eq(\"user_id\", userId)\r\n    .maybeSingle();\r\n\r\n  if (fetchError) {\r\n    console.error(\"Error al obtener carrito:\", fetchError.message);\r\n    throw fetchError;\r\n  }\r\n  if (existingCart) {\r\n    return existingCart;\r\n  }\r\n\r\n  // Si no existe, creamos uno nuevo\r\n  const { data: newCart, error: createError } = await supabase\r\n    .from(\"carts\")\r\n    .insert({ user_id: userId })\r\n    .select()\r\n    .maybeSingle();\r\n\r\n  if (createError) {\r\n    console.error(\"Error al crear carrito:\", createError.message);\r\n    throw createError;\r\n  }\r\n  return newCart;\r\n}\r\n\r\n/**\r\n * üîπ Agrega un producto al carrito del usuario actual.\r\n */\r\nexport async function addToCart(productId, quantity = 1) {\r\n  const { data, error: userError } = await supabase.auth.getUser();\r\n  if (userError) {\r\n    console.error(\"Error al obtener usuario:\", userError.message);\r\n    alert(\"‚ö†Ô∏è Debes iniciar sesi√≥n para agregar productos al carrito.\");\r\n    return;\r\n  }\r\n  const user = data.user;\r\n  if (!user) {\r\n    alert(\"‚ö†Ô∏è Debes iniciar sesi√≥n para agregar productos al carrito.\");\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const cart = await getOrCreateCart(user.id);\r\n\r\n    // Verificar si el producto ya est√° en el carrito (sin error si no existe)\r\n    const { data: existingItem, error: existingItemError } = await supabase\r\n      .from(\"cart_items\")\r\n      .select(\"*\")\r\n      .eq(\"cart_id\", cart.id)\r\n      .eq(\"product_id\", productId)\r\n      .maybeSingle();\r\n\r\n    if (existingItemError) {\r\n      console.error(\"Error al consultar √≠tem existente:\", existingItemError.message);\r\n      throw existingItemError;\r\n    }\r\n\r\n    // Consultar stock del producto\r\n    const { data: productData, error: productError } = await supabase\r\n      .from(\"products\")\r\n      .select(\"stock\")\r\n      .eq(\"id\", productId)\r\n      .maybeSingle();\r\n\r\n    if (productError) {\r\n      console.error(\"Error al obtener producto:\", productError.message);\r\n      throw productError;\r\n    }\r\n    if (!productData) {\r\n      alert(\"‚ö†Ô∏è Producto no encontrado.\");\r\n      return;\r\n    }\r\n    if (productData.stock <= 0) {\r\n      alert(\"‚ùå No hay stock disponible de este producto.\");\r\n      return;\r\n    }\r\n\r\n    if (existingItem) {\r\n      // Actualizar cantidad (sin exceder el stock)\r\n      const newQuantity = Math.min(existingItem.quantity + quantity, productData.stock);\r\n      const { error: updateError } = await supabase\r\n        .from(\"cart_items\")\r\n        .update({ quantity: newQuantity })\r\n        .eq(\"id\", existingItem.id);\r\n      if (updateError) {\r\n        console.error(\"Error al actualizar cantidad del carrito:\", updateError.message);\r\n        throw updateError;\r\n      }\r\n    } else {\r\n      // Insertar nuevo √≠tem en el carrito\r\n      const { error: insertError } = await supabase\r\n        .from(\"cart_items\")\r\n        .insert({ cart_id: cart.id, product_id: productId, quantity });\r\n      if (insertError) {\r\n        console.error(\"Error al insertar item en el carrito:\", insertError.message);\r\n        throw insertError;\r\n      }\r\n    }\r\n\r\n    alert(\"‚úÖ Producto agregado al carrito.\");\r\n  } catch (err) {\r\n    console.error(\"Error al agregar al carrito:\", err.message);\r\n    alert(\"Ocurri√≥ un error al agregar el producto al carrito.\");\r\n  }\r\n}\r\n\r\n/**\r\n * üîπ Obtiene todos los productos del carrito del usuario actual.\r\n */\r\nexport async function getCartItems() {\r\n  const { data, error: userError } = await supabase.auth.getUser();\r\n  if (userError) {\r\n    console.error(\"Error al obtener usuario:\", userError.message);\r\n    return [];\r\n  }\r\n  const user = data.user;\r\n  if (!user) {\r\n    return [];\r\n  }\r\n\r\n  try {\r\n    const cart = await getOrCreateCart(user.id);\r\n    const { data: items, error } = await supabase\r\n      .from(\"cart_items\")\r\n      .select(`\r\n        id,\r\n        quantity,\r\n        products (\r\n          id,\r\n          name,\r\n          price,\r\n          stock,\r\n          image_url\r\n        )\r\n      `)\r\n      .eq(\"cart_id\", cart.id);\r\n\r\n    if (error) {\r\n      console.error(\"Error al obtener items del carrito:\", error.message);\r\n      throw error;\r\n    }\r\n    return items || [];\r\n  } catch (err) {\r\n    console.error(\"Error al obtener items del carrito:\", err.message);\r\n    return [];\r\n  }\r\n}\r\n\r\n/**\r\n * üîπ Elimina un producto espec√≠fico del carrito.\r\n */\r\nexport async function removeFromCart(itemId) {\r\n  const { error } = await supabase\r\n    .from(\"cart_items\")\r\n    .delete()\r\n    .eq(\"id\", itemId);\r\n\r\n  if (error) {\r\n    console.error(\"Error al eliminar del carrito:\", error.message);\r\n  }\r\n}\r\n\r\n/**\r\n * üîπ Vac√≠a completamente el carrito del usuario actual.\r\n */\r\nexport async function clearCart() {\r\n  const { data, error: userError } = await supabase.auth.getUser();\r\n  if (userError) {\r\n    console.error(\"Error al obtener usuario:\", userError.message);\r\n    return;\r\n  }\r\n  const user = data.user;\r\n  if (!user) {\r\n    return;\r\n  }\r\n\r\n  const cart = await getOrCreateCart(user.id);\r\n  const { error } = await supabase\r\n    .from(\"cart_items\")\r\n    .delete()\r\n    .eq(\"cart_id\", cart.id);\r\n\r\n  if (error) {\r\n    console.error(\"Error al limpiar carrito:\", error.message);\r\n  }\r\n}\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}